// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | PREINC
  | PREDEC
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_PREINC
    | TOKEN_PREDEC
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | PREINC  -> 25 
  | PREDEC  -> 26 
  | CHAR  -> 27 
  | ELSE  -> 28 
  | IF  -> 29 
  | INT  -> 30 
  | NULL  -> 31 
  | PRINT  -> 32 
  | PRINTLN  -> 33 
  | RETURN  -> 34 
  | VOID  -> 35 
  | WHILE  -> 36 
  | FOR  -> 37 
  | CSTSTRING _ -> 38 
  | NAME _ -> 39 
  | CSTINT _ -> 40 
  | CSTBOOL _ -> 41 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_PREINC 
  | 26 -> TOKEN_PREDEC 
  | 27 -> TOKEN_CHAR 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_IF 
  | 30 -> TOKEN_INT 
  | 31 -> TOKEN_NULL 
  | 32 -> TOKEN_PRINT 
  | 33 -> TOKEN_PRINTLN 
  | 34 -> TOKEN_RETURN 
  | 35 -> TOKEN_VOID 
  | 36 -> TOKEN_WHILE 
  | 37 -> TOKEN_FOR 
  | 38 -> TOKEN_CSTSTRING 
  | 39 -> TOKEN_NAME 
  | 40 -> TOKEN_CSTINT 
  | 41 -> TOKEN_CSTBOOL 
  | 44 -> TOKEN_end_of_input
  | 42 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtU 
    | 32 -> NONTERM_StmtU 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_Expr 
    | 35 -> NONTERM_Expr 
    | 36 -> NONTERM_ExprNotAccess 
    | 37 -> NONTERM_ExprNotAccess 
    | 38 -> NONTERM_ExprNotAccess 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_AtExprNotAccess 
    | 60 -> NONTERM_AtExprNotAccess 
    | 61 -> NONTERM_AtExprNotAccess 
    | 62 -> NONTERM_Access 
    | 63 -> NONTERM_Access 
    | 64 -> NONTERM_Access 
    | 65 -> NONTERM_Access 
    | 66 -> NONTERM_Access 
    | 67 -> NONTERM_Exprs 
    | 68 -> NONTERM_Exprs 
    | 69 -> NONTERM_Exprs1 
    | 70 -> NONTERM_Exprs1 
    | 71 -> NONTERM_Const 
    | 72 -> NONTERM_Const 
    | 73 -> NONTERM_Const 
    | 74 -> NONTERM_Const 
    | 75 -> NONTERM_Type 
    | 76 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 44 
let _fsyacc_tagOfErrorTerminal = 42

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | PREINC  -> "PREINC" 
  | PREDEC  -> "PREDEC" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | PREINC  -> (null : System.Object) 
  | PREDEC  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;2us;65535us;0us;2us;4us;5us;2us;65535us;0us;4us;4us;4us;8us;65535us;0us;6us;4us;6us;25us;34us;29us;34us;35us;34us;37us;42us;40us;42us;43us;42us;4us;65535us;9us;11us;10us;11us;14us;15us;16us;17us;2us;65535us;0us;8us;4us;8us;2us;65535us;25us;26us;29us;30us;3us;65535us;25us;33us;29us;33us;35us;36us;12us;65535us;27us;28us;31us;32us;37us;54us;40us;54us;43us;54us;61us;54us;62us;54us;64us;54us;65us;54us;73us;54us;74us;54us;83us;54us;3us;65535us;37us;38us;40us;41us;43us;44us;4us;65535us;37us;40us;40us;40us;43us;40us;62us;86us;10us;65535us;37us;45us;40us;45us;43us;45us;61us;63us;62us;46us;64us;66us;65us;66us;73us;75us;74us;75us;83us;84us;6us;65535us;37us;47us;40us;47us;43us;47us;62us;47us;65us;85us;74us;87us;38us;65535us;37us;48us;40us;48us;43us;48us;50us;52us;57us;60us;58us;59us;61us;48us;62us;48us;64us;48us;65us;48us;69us;72us;70us;71us;73us;48us;74us;48us;77us;78us;79us;80us;81us;82us;83us;48us;93us;94us;96us;125us;99us;100us;101us;102us;126us;110us;127us;111us;128us;112us;129us;113us;130us;114us;131us;115us;132us;116us;133us;117us;134us;118us;135us;119us;136us;120us;137us;121us;138us;123us;140us;122us;151us;124us;154us;125us;38us;65535us;37us;90us;40us;90us;43us;90us;50us;90us;57us;90us;58us;90us;61us;90us;62us;90us;64us;90us;65us;90us;69us;90us;70us;90us;73us;90us;74us;90us;77us;90us;79us;90us;81us;90us;83us;90us;93us;90us;96us;90us;99us;90us;101us;90us;126us;90us;127us;90us;128us;90us;129us;90us;130us;90us;131us;90us;132us;90us;133us;90us;134us;90us;135us;90us;136us;90us;137us;90us;138us;90us;140us;91us;151us;90us;154us;90us;39us;65535us;37us;92us;40us;92us;43us;92us;50us;92us;57us;92us;58us;92us;61us;92us;62us;92us;64us;92us;65us;92us;69us;92us;70us;92us;73us;92us;74us;92us;77us;92us;79us;92us;81us;92us;83us;92us;93us;92us;96us;92us;99us;92us;101us;92us;126us;92us;127us;92us;128us;92us;129us;92us;130us;92us;131us;92us;132us;92us;133us;92us;134us;92us;135us;92us;136us;92us;137us;92us;138us;92us;140us;92us;148us;150us;151us;92us;154us;92us;43us;65535us;37us;89us;40us;89us;43us;89us;50us;89us;57us;89us;58us;89us;61us;89us;62us;89us;64us;89us;65us;89us;69us;89us;70us;89us;73us;89us;74us;89us;77us;89us;79us;89us;81us;89us;83us;89us;93us;89us;96us;89us;99us;89us;101us;89us;106us;107us;108us;109us;126us;89us;127us;89us;128us;89us;129us;89us;130us;89us;131us;89us;132us;89us;133us;89us;134us;89us;135us;89us;136us;89us;137us;89us;138us;89us;140us;88us;142us;143us;145us;146us;148us;149us;151us;89us;154us;89us;1us;65535us;96us;97us;2us;65535us;96us;153us;154us;155us;39us;65535us;37us;139us;40us;139us;43us;139us;50us;139us;57us;139us;58us;139us;61us;139us;62us;139us;64us;139us;65us;139us;69us;139us;70us;139us;73us;139us;74us;139us;77us;139us;79us;139us;81us;139us;83us;139us;93us;139us;96us;139us;99us;139us;101us;139us;126us;139us;127us;139us;128us;139us;129us;139us;130us;139us;131us;139us;132us;139us;133us;139us;134us;139us;135us;139us;136us;139us;137us;139us;138us;139us;140us;139us;148us;139us;151us;139us;154us;139us;8us;65535us;0us;10us;4us;10us;25us;9us;29us;9us;35us;9us;37us;9us;40us;9us;43us;9us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;6us;9us;18us;23us;26us;29us;33us;46us;50us;55us;66us;73us;112us;151us;191us;235us;237us;240us;280us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;3us;1us;3us;1us;4us;1us;4us;1us;5us;1us;6us;2us;6us;13us;3us;6us;10us;11us;1us;7us;2us;7us;13us;1us;8us;3us;8us;10us;11us;1us;9us;3us;9us;10us;11us;1us;9us;2us;10us;11us;1us;10us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;13us;1us;13us;1us;13us;1us;13us;1us;15us;2us;16us;17us;1us;17us;1us;17us;1us;18us;1us;18us;1us;18us;1us;20us;1us;20us;1us;21us;1us;21us;1us;21us;1us;22us;3us;22us;28us;31us;1us;23us;14us;24us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;24us;2us;25us;26us;1us;25us;14us;26us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;26us;1us;27us;1us;28us;3us;28us;31us;32us;1us;28us;3us;28us;31us;32us;16us;28us;31us;32us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;28us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;28us;3us;28us;31us;32us;1us;28us;1us;28us;2us;28us;31us;1us;28us;1us;29us;2us;29us;33us;1us;29us;2us;29us;33us;15us;29us;33us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;29us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;29us;2us;29us;33us;1us;29us;1us;30us;1us;30us;14us;30us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;30us;14us;30us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;30us;14us;30us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;30us;1us;30us;1us;31us;1us;32us;1us;33us;6us;34us;37us;42us;43us;63us;66us;5us;34us;37us;42us;43us;66us;1us;35us;2us;35us;60us;1us;36us;1us;37us;14us;37us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;2us;38us;62us;1us;38us;1us;38us;1us;38us;1us;39us;14us;39us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;40us;14us;40us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;1us;41us;1us;42us;1us;43us;1us;44us;2us;44us;66us;1us;45us;2us;45us;66us;14us;46us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;46us;47us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;46us;47us;48us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;46us;47us;48us;49us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;46us;47us;48us;49us;50us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;46us;47us;48us;49us;50us;51us;51us;52us;53us;54us;55us;56us;57us;58us;14us;46us;47us;48us;49us;50us;51us;52us;52us;53us;54us;55us;56us;57us;58us;14us;46us;47us;48us;49us;50us;51us;52us;53us;53us;54us;55us;56us;57us;58us;14us;46us;47us;48us;49us;50us;51us;52us;53us;54us;54us;55us;56us;57us;58us;14us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;55us;56us;57us;58us;14us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;56us;57us;58us;14us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;57us;58us;13us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;58us;14us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;66us;15us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;69us;70us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;1us;56us;1us;57us;1us;58us;1us;59us;2us;60us;63us;1us;60us;1us;61us;2us;61us;66us;1us;62us;1us;63us;2us;63us;66us;1us;63us;2us;64us;65us;2us;64us;66us;1us;65us;1us;66us;1us;66us;1us;68us;1us;70us;1us;70us;1us;71us;1us;72us;1us;73us;1us;73us;1us;74us;1us;75us;1us;76us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;20us;23us;27us;29us;32us;34us;38us;40us;44us;46us;49us;51us;53us;55us;57us;59us;61us;63us;65us;67us;69us;71us;73us;75us;77us;80us;82us;84us;86us;88us;90us;92us;94us;96us;98us;100us;102us;106us;108us;123us;125us;128us;130us;145us;147us;149us;151us;155us;157us;161us;178us;193us;195us;199us;201us;203us;206us;208us;210us;213us;215us;218us;234us;249us;251us;254us;256us;258us;260us;275us;277us;292us;294us;309us;311us;313us;315us;317us;319us;326us;332us;334us;337us;339us;341us;356us;359us;361us;363us;365us;367us;382us;384us;399us;401us;403us;405us;407us;410us;412us;415us;430us;445us;460us;475us;490us;505us;520us;535us;550us;565us;580us;595us;609us;624us;639us;655us;657us;659us;661us;663us;665us;667us;669us;671us;673us;675us;677us;679us;681us;683us;686us;688us;690us;693us;695us;697us;700us;702us;705us;708us;710us;712us;714us;716us;718us;720us;722us;724us;726us;728us;730us;732us;|]
let _fsyacc_action_rows = 163
let _fsyacc_actionTableElements = [|3us;16386us;27us;162us;30us;161us;35us;23us;0us;49152us;1us;32768us;0us;3us;0us;16385us;3us;16386us;27us;162us;30us;161us;35us;23us;0us;16387us;1us;32768us;7us;7us;0us;16388us;0us;16389us;3us;32768us;1us;16us;22us;14us;39us;12us;3us;32768us;1us;16us;22us;14us;39us;13us;1us;16390us;5us;19us;0us;16391us;1us;16391us;1us;29us;3us;32768us;1us;16us;22us;14us;39us;12us;1us;16392us;5us;19us;3us;32768us;1us;16us;22us;14us;39us;12us;2us;32768us;2us;18us;5us;19us;0us;16393us;2us;32768us;6us;20us;40us;21us;0us;16394us;1us;32768us;6us;22us;0us;16395us;1us;32768us;39us;24us;1us;32768us;1us;25us;2us;16398us;27us;162us;30us;161us;1us;32768us;2us;27us;1us;32768us;3us;37us;0us;16396us;2us;16398us;27us;162us;30us;161us;1us;32768us;2us;31us;1us;32768us;3us;37us;0us;16397us;0us;16399us;1us;16400us;8us;35us;2us;32768us;27us;162us;30us;161us;0us;16401us;20us;16403us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;27us;162us;29us;56us;30us;161us;31us;160us;32us;101us;33us;103us;34us;50us;36us;68us;37us;76us;39us;95us;40us;156us;41us;157us;1us;32768us;4us;39us;0us;16402us;20us;16403us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;27us;162us;29us;56us;30us;161us;31us;160us;32us;101us;33us;103us;34us;50us;36us;68us;37us;76us;39us;95us;40us;156us;41us;157us;0us;16404us;1us;32768us;7us;43us;20us;16403us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;27us;162us;29us;56us;30us;161us;31us;160us;32us;101us;33us;103us;34us;50us;36us;68us;37us;76us;39us;95us;40us;156us;41us;157us;0us;16405us;0us;16406us;1us;16406us;28us;65us;0us;16407us;14us;32768us;7us;49us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;0us;16408us;14us;32768us;1us;140us;7us;51us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;0us;16409us;14us;32768us;7us;53us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;0us;16410us;0us;16411us;1us;32768us;1us;57us;1us;32768us;1us;58us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;14us;32768us;2us;62us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;14us;32768us;2us;61us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;18us;32768us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;29us;55us;31us;160us;32us;101us;33us;103us;34us;50us;36us;67us;37us;76us;39us;95us;40us;156us;41us;157us;18us;32768us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;29us;56us;31us;160us;32us;101us;33us;103us;34us;50us;36us;68us;37us;76us;39us;95us;40us;156us;41us;157us;1us;32768us;28us;64us;18us;32768us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;29us;55us;31us;160us;32us;101us;33us;103us;34us;50us;36us;67us;37us;76us;39us;95us;40us;156us;41us;157us;18us;32768us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;29us;56us;31us;160us;32us;101us;33us;103us;34us;50us;36us;68us;37us;76us;39us;95us;40us;156us;41us;157us;0us;16412us;1us;32768us;1us;69us;1us;32768us;1us;70us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;14us;32768us;2us;74us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;14us;32768us;2us;73us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;18us;32768us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;29us;55us;31us;160us;32us;101us;33us;103us;34us;50us;36us;67us;37us;76us;39us;95us;40us;156us;41us;157us;18us;32768us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;29us;56us;31us;160us;32us;101us;33us;103us;34us;50us;36us;68us;37us;76us;39us;95us;40us;156us;41us;157us;0us;16413us;1us;32768us;1us;77us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;14us;32768us;7us;79us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;14us;32768us;7us;81us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;14us;32768us;2us;83us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;18us;32768us;1us;140us;3us;37us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;29us;55us;31us;160us;32us;101us;33us;103us;34us;50us;36us;67us;37us;76us;39us;95us;40us;156us;41us;157us;0us;16414us;0us;16415us;0us;16416us;0us;16417us;5us;16418us;2us;147us;5us;151us;9us;93us;25us;104us;26us;105us;4us;16418us;5us;151us;9us;93us;25us;104us;26us;105us;0us;16419us;1us;16419us;2us;141us;0us;16420us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;16421us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;1us;16446us;1us;96us;13us;16451us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;1us;32768us;2us;98us;0us;16422us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;0us;16423us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;16424us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;0us;16425us;0us;16426us;0us;16427us;3us;32768us;1us;145us;22us;148us;39us;144us;1us;16428us;5us;151us;3us;32768us;1us;145us;22us;148us;39us;144us;1us;16429us;5us;151us;3us;16430us;22us;128us;23us;129us;24us;130us;3us;16431us;22us;128us;23us;129us;24us;130us;0us;16432us;0us;16433us;0us;16434us;9us;16435us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;9us;16436us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;9us;16437us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;9us;16438us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;9us;16439us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;9us;16440us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;11us;16441us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;13us;32768us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;12us;16442us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;14us;32768us;6us;152us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;14us;16453us;8us;154us;12us;138us;13us;137us;14us;131us;15us;132us;16us;133us;17us;134us;18us;135us;19us;136us;20us;126us;21us;127us;22us;128us;23us;129us;24us;130us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;0us;16443us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;0us;16444us;3us;32768us;1us;145us;22us;148us;39us;144us;1us;16445us;5us;151us;0us;16446us;3us;32768us;1us;145us;22us;148us;39us;144us;2us;32768us;2us;147us;5us;151us;0us;16447us;8us;32768us;1us;140us;10us;142us;21us;158us;22us;148us;31us;160us;39us;144us;40us;156us;41us;157us;1us;16448us;5us;151us;0us;16449us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;0us;16450us;0us;16452us;13us;32768us;1us;140us;10us;142us;11us;99us;21us;158us;22us;148us;25us;106us;26us;108us;31us;160us;32us;101us;33us;103us;39us;95us;40us;156us;41us;157us;0us;16454us;0us;16455us;0us;16456us;1us;32768us;40us;159us;0us;16457us;0us;16458us;0us;16459us;0us;16460us;|]
let _fsyacc_actionTableRowOffsets = [|0us;4us;5us;7us;8us;12us;13us;15us;16us;17us;21us;25us;27us;28us;30us;34us;36us;40us;43us;44us;47us;48us;50us;51us;53us;55us;58us;60us;62us;63us;66us;68us;70us;71us;72us;74us;77us;78us;99us;101us;102us;123us;124us;126us;147us;148us;149us;151us;152us;167us;168us;183us;184us;199us;200us;201us;203us;205us;219us;233us;248us;263us;282us;301us;303us;322us;341us;342us;344us;346us;360us;374us;389us;404us;423us;442us;443us;445us;459us;474us;488us;503us;517us;532us;551us;552us;553us;554us;555us;561us;566us;567us;569us;570us;584us;598us;600us;614us;616us;617us;631us;632us;646us;660us;661us;662us;663us;667us;669us;673us;675us;679us;683us;684us;685us;686us;696us;706us;716us;726us;736us;746us;758us;772us;785us;800us;815us;829us;843us;857us;871us;885us;899us;913us;927us;941us;955us;969us;983us;997us;998us;1012us;1013us;1017us;1019us;1020us;1024us;1027us;1028us;1037us;1039us;1040us;1054us;1055us;1056us;1070us;1071us;1072us;1073us;1075us;1076us;1077us;1078us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;1us;2us;1us;2us;3us;3us;4us;6us;6us;0us;1us;1us;3us;3us;0us;2us;3us;1us;1us;2us;2us;3us;1us;7us;5us;9us;7us;5us;5us;1us;1us;1us;3us;4us;2us;2us;1us;2us;2us;2us;2us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;1us;3us;2us;1us;3us;2us;2us;4us;0us;1us;1us;3us;1us;1us;2us;1us;1us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;3us;3us;4us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;9us;10us;10us;10us;11us;11us;12us;12us;12us;12us;12us;12us;12us;13us;13us;13us;14us;14us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;16us;16us;16us;17us;17us;17us;17us;17us;18us;18us;19us;19us;20us;20us;20us;20us;21us;21us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;65535us;16388us;16389us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;65535us;65535us;16393us;65535us;16394us;65535us;16395us;65535us;65535us;65535us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;16399us;65535us;65535us;16401us;65535us;65535us;16402us;65535us;16404us;65535us;65535us;16405us;16406us;65535us;16407us;65535us;16408us;65535us;16409us;65535us;16410us;16411us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16412us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16413us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16414us;16415us;16416us;16417us;65535us;65535us;16419us;65535us;16420us;65535us;65535us;65535us;65535us;65535us;16422us;65535us;65535us;65535us;65535us;16425us;16426us;16427us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16443us;65535us;16444us;65535us;65535us;16446us;65535us;65535us;16447us;65535us;65535us;16449us;65535us;16450us;16452us;65535us;16454us;16455us;16456us;65535us;16457us;16458us;16459us;16460us;|]
let _fsyacc_reductions = lazy [|
# 420 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 429 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "CPar.fsy"
                                                               Prog _1 
                   )
# 44 "CPar.fsy"
                 : Absyn.program));
# 440 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "CPar.fsy"
                                                               [] 
                   )
# 49 "CPar.fsy"
                 : 'gentype_Topdecs));
# 450 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 50 "CPar.fsy"
                 : 'gentype_Topdecs));
# 462 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 54 "CPar.fsy"
                 : 'gentype_Topdec));
# 473 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               _1 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Topdec));
# 484 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Vardec));
# 496 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 84 "CPar.fsy"
                 : 'gentype_Vardesc));
# 507 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 92 "CPar.fsy"
                 : 'gentype_Vardesc));
# 518 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               _2                                      
                   )
# 94 "CPar.fsy"
                 : 'gentype_Vardesc));
# 529 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 540 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 552 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 103 "CPar.fsy"
                 : 'gentype_Fundec));
# 565 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 105 "CPar.fsy"
                 : 'gentype_Fundec));
# 579 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               [] 
                   )
# 110 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 589 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               _1 
                   )
# 111 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 600 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               [_1]     
                   )
# 115 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 611 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 116 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 623 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               Block _2 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Block));
# 634 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               [] 
                   )
# 125 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 644 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 126 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 656 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               _1 
                   )
# 131 "CPar.fsy"
                 : 'gentype_Stmt));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               _1 
                   )
# 132 "CPar.fsy"
                 : 'gentype_Stmt));
# 690 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtM));
# 701 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Return None          
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtM));
# 711 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 722 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1                   
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 733 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 746 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 758 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 772 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtU));
# 785 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtU));
# 797 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtU));
# 809 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               Access _1           
                   )
# 152 "CPar.fsy"
                 : 'gentype_Expr));
# 820 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               _1                  
                   )
# 153 "CPar.fsy"
                 : 'gentype_Expr));
# 831 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               _1                  
                   )
# 157 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 842 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 158 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 854 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 159 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 866 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 160 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 877 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 161 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 888 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 162 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 898 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               Prim3("I++", _1)    
                   )
# 163 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 909 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               Prim3("I--", _1)    
                   )
# 164 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 920 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               Prim3("++I", _2)    
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 931 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Prim3("--I", _2)    
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 942 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 954 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 966 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 978 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 990 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1002 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1014 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1026 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1038 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1050 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1062 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1074 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1086 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1098 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               CstI _1             
                   )
# 187 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1109 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               _2                  
                   )
# 188 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1120 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Addr _2             
                   )
# 189 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1131 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               AccVar _1           
                   )
# 193 "CPar.fsy"
                 : 'gentype_Access));
# 1142 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               _2                  
                   )
# 194 "CPar.fsy"
                 : 'gentype_Access));
# 1153 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 195 "CPar.fsy"
                 : 'gentype_Access));
# 1164 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 196 "CPar.fsy"
                 : 'gentype_Access));
# 1175 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 197 "CPar.fsy"
                 : 'gentype_Access));
# 1187 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               []       
                   )
# 201 "CPar.fsy"
                 : 'gentype_Exprs));
# 1197 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               _1       
                   )
# 202 "CPar.fsy"
                 : 'gentype_Exprs));
# 1208 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               [_1]     
                   )
# 206 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1219 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 207 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1231 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               _1       
                   )
# 211 "CPar.fsy"
                 : 'gentype_Const));
# 1242 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               _1       
                   )
# 212 "CPar.fsy"
                 : 'gentype_Const));
# 1253 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               - _2     
                   )
# 213 "CPar.fsy"
                 : 'gentype_Const));
# 1264 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               -1       
                   )
# 214 "CPar.fsy"
                 : 'gentype_Const));
# 1274 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               TypI     
                   )
# 218 "CPar.fsy"
                 : 'gentype_Type));
# 1284 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               TypC     
                   )
# 219 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1295 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 45;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
