// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | QST
  | COLON
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | PREINC
  | PREDEC
  | PLUSAS
  | MINUSAS
  | TIMESAS
  | DIVAS
  | MODAS
  | BITLEFT
  | BITRIGHT
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DO
  | BREAK
  | SWITCH
  | CASE
  | DEFAULT
  | CONTINUE
  | UNTIL
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_QST
    | TOKEN_COLON
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_PREINC
    | TOKEN_PREDEC
    | TOKEN_PLUSAS
    | TOKEN_MINUSAS
    | TOKEN_TIMESAS
    | TOKEN_DIVAS
    | TOKEN_MODAS
    | TOKEN_BITLEFT
    | TOKEN_BITRIGHT
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DO
    | TOKEN_BREAK
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_CONTINUE
    | TOKEN_UNTIL
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type
    | NONTERM_CaseList
    | NONTERM_CaseDec

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | QST  -> 0 
  | COLON  -> 1 
  | EOF  -> 2 
  | LPAR  -> 3 
  | RPAR  -> 4 
  | LBRACE  -> 5 
  | RBRACE  -> 6 
  | LBRACK  -> 7 
  | RBRACK  -> 8 
  | SEMI  -> 9 
  | COMMA  -> 10 
  | ASSIGN  -> 11 
  | AMP  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | PREINC  -> 27 
  | PREDEC  -> 28 
  | PLUSAS  -> 29 
  | MINUSAS  -> 30 
  | TIMESAS  -> 31 
  | DIVAS  -> 32 
  | MODAS  -> 33 
  | BITLEFT  -> 34 
  | BITRIGHT  -> 35 
  | CHAR  -> 36 
  | ELSE  -> 37 
  | IF  -> 38 
  | INT  -> 39 
  | NULL  -> 40 
  | PRINT  -> 41 
  | PRINTLN  -> 42 
  | RETURN  -> 43 
  | VOID  -> 44 
  | WHILE  -> 45 
  | FOR  -> 46 
  | DO  -> 47 
  | BREAK  -> 48 
  | SWITCH  -> 49 
  | CASE  -> 50 
  | DEFAULT  -> 51 
  | CONTINUE  -> 52 
  | UNTIL  -> 53 
  | CSTSTRING _ -> 54 
  | NAME _ -> 55 
  | CSTINT _ -> 56 
  | CSTBOOL _ -> 57 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_QST 
  | 1 -> TOKEN_COLON 
  | 2 -> TOKEN_EOF 
  | 3 -> TOKEN_LPAR 
  | 4 -> TOKEN_RPAR 
  | 5 -> TOKEN_LBRACE 
  | 6 -> TOKEN_RBRACE 
  | 7 -> TOKEN_LBRACK 
  | 8 -> TOKEN_RBRACK 
  | 9 -> TOKEN_SEMI 
  | 10 -> TOKEN_COMMA 
  | 11 -> TOKEN_ASSIGN 
  | 12 -> TOKEN_AMP 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_PREINC 
  | 28 -> TOKEN_PREDEC 
  | 29 -> TOKEN_PLUSAS 
  | 30 -> TOKEN_MINUSAS 
  | 31 -> TOKEN_TIMESAS 
  | 32 -> TOKEN_DIVAS 
  | 33 -> TOKEN_MODAS 
  | 34 -> TOKEN_BITLEFT 
  | 35 -> TOKEN_BITRIGHT 
  | 36 -> TOKEN_CHAR 
  | 37 -> TOKEN_ELSE 
  | 38 -> TOKEN_IF 
  | 39 -> TOKEN_INT 
  | 40 -> TOKEN_NULL 
  | 41 -> TOKEN_PRINT 
  | 42 -> TOKEN_PRINTLN 
  | 43 -> TOKEN_RETURN 
  | 44 -> TOKEN_VOID 
  | 45 -> TOKEN_WHILE 
  | 46 -> TOKEN_FOR 
  | 47 -> TOKEN_DO 
  | 48 -> TOKEN_BREAK 
  | 49 -> TOKEN_SWITCH 
  | 50 -> TOKEN_CASE 
  | 51 -> TOKEN_DEFAULT 
  | 52 -> TOKEN_CONTINUE 
  | 53 -> TOKEN_UNTIL 
  | 54 -> TOKEN_CSTSTRING 
  | 55 -> TOKEN_NAME 
  | 56 -> TOKEN_CSTINT 
  | 57 -> TOKEN_CSTBOOL 
  | 60 -> TOKEN_end_of_input
  | 58 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Exprs 
    | 82 -> NONTERM_Exprs 
    | 83 -> NONTERM_Exprs1 
    | 84 -> NONTERM_Exprs1 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_Const 
    | 87 -> NONTERM_Const 
    | 88 -> NONTERM_Const 
    | 89 -> NONTERM_Type 
    | 90 -> NONTERM_Type 
    | 91 -> NONTERM_CaseList 
    | 92 -> NONTERM_CaseList 
    | 93 -> NONTERM_CaseList 
    | 94 -> NONTERM_CaseList 
    | 95 -> NONTERM_CaseDec 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 60 
let _fsyacc_tagOfErrorTerminal = 58

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | QST  -> "QST" 
  | COLON  -> "COLON" 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | PREINC  -> "PREINC" 
  | PREDEC  -> "PREDEC" 
  | PLUSAS  -> "PLUSAS" 
  | MINUSAS  -> "MINUSAS" 
  | TIMESAS  -> "TIMESAS" 
  | DIVAS  -> "DIVAS" 
  | MODAS  -> "MODAS" 
  | BITLEFT  -> "BITLEFT" 
  | BITRIGHT  -> "BITRIGHT" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DO  -> "DO" 
  | BREAK  -> "BREAK" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | CONTINUE  -> "CONTINUE" 
  | UNTIL  -> "UNTIL" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | QST  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | PREINC  -> (null : System.Object) 
  | PREDEC  -> (null : System.Object) 
  | PLUSAS  -> (null : System.Object) 
  | MINUSAS  -> (null : System.Object) 
  | TIMESAS  -> (null : System.Object) 
  | DIVAS  -> (null : System.Object) 
  | MODAS  -> (null : System.Object) 
  | BITLEFT  -> (null : System.Object) 
  | BITRIGHT  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 17us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 82us; 54us; 83us; 54us; 92us; 54us; 94us; 54us; 213us; 54us; 216us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 6us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 113us; 213us; 214us; 216us; 217us; 15us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 92us; 93us; 94us; 95us; 213us; 45us; 216us; 45us; 9us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 112us; 74us; 114us; 83us; 115us; 213us; 47us; 216us; 47us; 57us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 78us; 81us; 79us; 80us; 82us; 48us; 83us; 48us; 86us; 87us; 88us; 89us; 90us; 91us; 92us; 48us; 94us; 48us; 97us; 98us; 104us; 105us; 121us; 122us; 124us; 162us; 127us; 128us; 129us; 130us; 164us; 138us; 165us; 139us; 166us; 140us; 167us; 141us; 168us; 142us; 169us; 143us; 170us; 144us; 171us; 145us; 172us; 146us; 173us; 147us; 174us; 148us; 175us; 149us; 176us; 150us; 177us; 151us; 178us; 152us; 179us; 153us; 180us; 154us; 181us; 155us; 182us; 156us; 183us; 157us; 184us; 158us; 185us; 160us; 187us; 159us; 198us; 161us; 201us; 162us; 213us; 48us; 215us; 163us; 216us; 48us; 57us; 65535us; 37us; 118us; 40us; 118us; 43us; 118us; 50us; 118us; 57us; 118us; 58us; 118us; 61us; 118us; 62us; 118us; 64us; 118us; 65us; 118us; 69us; 118us; 70us; 118us; 73us; 118us; 74us; 118us; 78us; 118us; 79us; 118us; 82us; 118us; 83us; 118us; 86us; 118us; 88us; 118us; 90us; 118us; 92us; 118us; 94us; 118us; 97us; 118us; 104us; 118us; 121us; 118us; 124us; 118us; 127us; 118us; 129us; 118us; 164us; 118us; 165us; 118us; 166us; 118us; 167us; 118us; 168us; 118us; 169us; 118us; 170us; 118us; 171us; 118us; 172us; 118us; 173us; 118us; 174us; 118us; 175us; 118us; 176us; 118us; 177us; 118us; 178us; 118us; 179us; 118us; 180us; 118us; 181us; 118us; 182us; 118us; 183us; 118us; 184us; 118us; 185us; 118us; 187us; 119us; 198us; 118us; 201us; 118us; 213us; 118us; 215us; 118us; 216us; 118us; 58us; 65535us; 37us; 120us; 40us; 120us; 43us; 120us; 50us; 120us; 57us; 120us; 58us; 120us; 61us; 120us; 62us; 120us; 64us; 120us; 65us; 120us; 69us; 120us; 70us; 120us; 73us; 120us; 74us; 120us; 78us; 120us; 79us; 120us; 82us; 120us; 83us; 120us; 86us; 120us; 88us; 120us; 90us; 120us; 92us; 120us; 94us; 120us; 97us; 120us; 104us; 120us; 121us; 120us; 124us; 120us; 127us; 120us; 129us; 120us; 164us; 120us; 165us; 120us; 166us; 120us; 167us; 120us; 168us; 120us; 169us; 120us; 170us; 120us; 171us; 120us; 172us; 120us; 173us; 120us; 174us; 120us; 175us; 120us; 176us; 120us; 177us; 120us; 178us; 120us; 179us; 120us; 180us; 120us; 181us; 120us; 182us; 120us; 183us; 120us; 184us; 120us; 185us; 120us; 187us; 120us; 195us; 197us; 198us; 120us; 201us; 120us; 213us; 120us; 215us; 120us; 216us; 120us; 62us; 65535us; 37us; 117us; 40us; 117us; 43us; 117us; 50us; 117us; 57us; 117us; 58us; 117us; 61us; 117us; 62us; 117us; 64us; 117us; 65us; 117us; 69us; 117us; 70us; 117us; 73us; 117us; 74us; 117us; 78us; 117us; 79us; 117us; 82us; 117us; 83us; 117us; 86us; 117us; 88us; 117us; 90us; 117us; 92us; 117us; 94us; 117us; 97us; 117us; 104us; 117us; 121us; 117us; 124us; 117us; 127us; 117us; 129us; 117us; 134us; 135us; 136us; 137us; 164us; 117us; 165us; 117us; 166us; 117us; 167us; 117us; 168us; 117us; 169us; 117us; 170us; 117us; 171us; 117us; 172us; 117us; 173us; 117us; 174us; 117us; 175us; 117us; 176us; 117us; 177us; 117us; 178us; 117us; 179us; 117us; 180us; 117us; 181us; 117us; 182us; 117us; 183us; 117us; 184us; 117us; 185us; 117us; 187us; 116us; 189us; 190us; 192us; 193us; 195us; 196us; 198us; 117us; 201us; 117us; 213us; 117us; 215us; 117us; 216us; 117us; 1us; 65535us; 124us; 125us; 2us; 65535us; 124us; 200us; 201us; 202us; 58us; 65535us; 37us; 186us; 40us; 186us; 43us; 186us; 50us; 186us; 57us; 186us; 58us; 186us; 61us; 186us; 62us; 186us; 64us; 186us; 65us; 186us; 69us; 186us; 70us; 186us; 73us; 186us; 74us; 186us; 78us; 186us; 79us; 186us; 82us; 186us; 83us; 186us; 86us; 186us; 88us; 186us; 90us; 186us; 92us; 186us; 94us; 186us; 97us; 186us; 104us; 186us; 121us; 186us; 124us; 186us; 127us; 186us; 129us; 186us; 164us; 186us; 165us; 186us; 166us; 186us; 167us; 186us; 168us; 186us; 169us; 186us; 170us; 186us; 171us; 186us; 172us; 186us; 173us; 186us; 174us; 186us; 175us; 186us; 176us; 186us; 177us; 186us; 178us; 186us; 179us; 186us; 180us; 186us; 181us; 186us; 182us; 186us; 183us; 186us; 184us; 186us; 185us; 186us; 187us; 186us; 195us; 186us; 198us; 186us; 201us; 186us; 213us; 186us; 215us; 186us; 216us; 186us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; 2us; 65535us; 107us; 108us; 210us; 211us; 2us; 65535us; 107us; 210us; 210us; 210us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 51us; 55us; 62us; 78us; 88us; 146us; 204us; 263us; 326us; 328us; 331us; 390us; 399us; 402us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 36us; 1us; 23us; 17us; 24us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 17us; 26us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 36us; 37us; 1us; 28us; 3us; 28us; 36us; 37us; 19us; 28us; 36us; 37us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 28us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 28us; 3us; 28us; 36us; 37us; 1us; 28us; 1us; 28us; 2us; 28us; 36us; 1us; 28us; 1us; 29us; 2us; 29us; 38us; 1us; 29us; 2us; 29us; 38us; 18us; 29us; 38us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 29us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 29us; 2us; 29us; 38us; 1us; 29us; 1us; 30us; 2us; 30us; 39us; 1us; 30us; 2us; 30us; 39us; 18us; 30us; 39us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 30us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 30us; 2us; 30us; 39us; 1us; 30us; 1us; 31us; 1us; 31us; 17us; 31us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 31us; 17us; 31us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 31us; 17us; 31us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 17us; 32us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 17us; 34us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 11us; 40us; 43us; 48us; 49us; 65us; 66us; 67us; 68us; 69us; 77us; 80us; 10us; 40us; 43us; 48us; 49us; 65us; 66us; 67us; 68us; 69us; 80us; 1us; 41us; 2us; 41us; 74us; 1us; 42us; 1us; 43us; 17us; 43us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 2us; 44us; 76us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 17us; 45us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 46us; 17us; 46us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 2us; 50us; 80us; 1us; 51us; 2us; 51us; 80us; 17us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 66us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 68us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 69us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 71us; 72us; 16us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 72us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 80us; 18us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 83us; 84us; 17us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 95us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 2us; 74us; 77us; 1us; 74us; 1us; 75us; 2us; 75us; 80us; 1us; 76us; 1us; 77us; 2us; 77us; 80us; 1us; 77us; 2us; 78us; 79us; 2us; 78us; 80us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 82us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 2us; 92us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 126us; 128us; 131us; 133us; 151us; 153us; 155us; 157us; 161us; 163us; 167us; 187us; 205us; 207us; 211us; 213us; 215us; 218us; 220us; 222us; 225us; 227us; 230us; 249us; 267us; 269us; 272us; 274us; 276us; 279us; 281us; 284us; 303us; 321us; 323us; 326us; 328us; 330us; 332us; 350us; 352us; 370us; 372us; 390us; 392us; 394us; 396us; 398us; 400us; 402us; 420us; 422us; 424us; 426us; 428us; 430us; 432us; 450us; 452us; 454us; 456us; 458us; 460us; 462us; 464us; 466us; 468us; 470us; 482us; 493us; 495us; 498us; 500us; 502us; 520us; 523us; 525us; 527us; 529us; 531us; 549us; 551us; 569us; 571us; 573us; 575us; 577us; 580us; 582us; 585us; 603us; 621us; 639us; 657us; 675us; 693us; 711us; 729us; 747us; 765us; 783us; 801us; 819us; 837us; 855us; 873us; 891us; 909us; 927us; 945us; 963us; 980us; 998us; 1016us; 1035us; 1053us; 1055us; 1057us; 1059us; 1061us; 1063us; 1065us; 1067us; 1069us; 1071us; 1073us; 1075us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1093us; 1095us; 1097us; 1099us; 1102us; 1104us; 1106us; 1109us; 1111us; 1113us; 1116us; 1118us; 1121us; 1124us; 1126us; 1128us; 1130us; 1132us; 1134us; 1136us; 1138us; 1140us; 1142us; 1144us; 1146us; 1148us; 1150us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1165us; |]
let _fsyacc_action_rows = 218
let _fsyacc_actionTableElements = [|3us; 16386us; 36us; 209us; 39us; 208us; 44us; 23us; 0us; 49152us; 1us; 32768us; 2us; 3us; 0us; 16385us; 3us; 16386us; 36us; 209us; 39us; 208us; 44us; 23us; 0us; 16387us; 1us; 32768us; 9us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 3us; 16us; 24us; 14us; 55us; 12us; 3us; 32768us; 3us; 16us; 24us; 14us; 55us; 13us; 1us; 16390us; 7us; 19us; 0us; 16391us; 1us; 16391us; 3us; 29us; 3us; 32768us; 3us; 16us; 24us; 14us; 55us; 12us; 1us; 16392us; 7us; 19us; 3us; 32768us; 3us; 16us; 24us; 14us; 55us; 12us; 2us; 32768us; 4us; 18us; 7us; 19us; 0us; 16393us; 2us; 32768us; 8us; 20us; 56us; 21us; 0us; 16394us; 1us; 32768us; 8us; 22us; 0us; 16395us; 1us; 32768us; 55us; 24us; 1us; 32768us; 3us; 25us; 2us; 16398us; 36us; 209us; 39us; 208us; 1us; 32768us; 4us; 27us; 1us; 32768us; 5us; 37us; 0us; 16396us; 2us; 16398us; 36us; 209us; 39us; 208us; 1us; 32768us; 4us; 31us; 1us; 32768us; 5us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 10us; 35us; 2us; 32768us; 36us; 209us; 39us; 208us; 0us; 16401us; 25us; 16403us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 36us; 209us; 38us; 56us; 39us; 208us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 1us; 32768us; 6us; 39us; 0us; 16402us; 25us; 16403us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 36us; 209us; 38us; 56us; 39us; 208us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16404us; 1us; 32768us; 9us; 43us; 25us; 16403us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 36us; 209us; 38us; 56us; 39us; 208us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 37us; 65us; 0us; 16407us; 17us; 32768us; 0us; 182us; 9us; 49us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 0us; 16408us; 14us; 32768us; 3us; 187us; 9us; 51us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16409us; 17us; 32768us; 0us; 182us; 9us; 53us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 3us; 57us; 1us; 32768us; 3us; 58us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 17us; 32768us; 0us; 182us; 4us; 62us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 17us; 32768us; 0us; 182us; 4us; 61us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 55us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 67us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 76us; 55us; 123us; 56us; 203us; 57us; 204us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 56us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 1us; 32768us; 37us; 64us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 55us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 67us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 76us; 55us; 123us; 56us; 203us; 57us; 204us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 56us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16412us; 1us; 32768us; 3us; 69us; 1us; 32768us; 3us; 70us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 17us; 32768us; 0us; 182us; 4us; 74us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 17us; 32768us; 0us; 182us; 4us; 73us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 55us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 67us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 76us; 55us; 123us; 56us; 203us; 57us; 204us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 56us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16413us; 1us; 32768us; 3us; 78us; 1us; 32768us; 3us; 79us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 17us; 32768us; 0us; 182us; 4us; 83us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 17us; 32768us; 0us; 182us; 4us; 82us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 55us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 67us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 76us; 55us; 123us; 56us; 203us; 57us; 204us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 56us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16414us; 1us; 32768us; 3us; 86us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 17us; 32768us; 0us; 182us; 9us; 88us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 17us; 32768us; 0us; 182us; 9us; 90us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 17us; 32768us; 0us; 182us; 4us; 92us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 55us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 67us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 76us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16415us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 55us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 67us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 76us; 55us; 123us; 56us; 203us; 57us; 204us; 1us; 32768us; 45us; 96us; 1us; 32768us; 3us; 97us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 17us; 32768us; 0us; 182us; 4us; 99us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 1us; 32768us; 9us; 100us; 0us; 16416us; 1us; 32768us; 9us; 102us; 0us; 16417us; 1us; 32768us; 3us; 104us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 17us; 32768us; 0us; 182us; 4us; 106us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 1us; 32768us; 5us; 107us; 2us; 16475us; 50us; 215us; 51us; 212us; 1us; 32768us; 6us; 109us; 0us; 16418us; 1us; 32768us; 9us; 111us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 10us; 16424us; 4us; 194us; 7us; 198us; 11us; 121us; 27us; 132us; 28us; 133us; 29us; 177us; 30us; 178us; 31us; 179us; 32us; 180us; 33us; 181us; 9us; 16424us; 7us; 198us; 11us; 121us; 27us; 132us; 28us; 133us; 29us; 177us; 30us; 178us; 31us; 179us; 32us; 180us; 33us; 181us; 0us; 16425us; 1us; 16425us; 4us; 188us; 0us; 16426us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 16us; 16427us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 1us; 16460us; 3us; 124us; 13us; 16465us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 1us; 32768us; 4us; 126us; 0us; 16428us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 1us; 16429us; 0us; 182us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 16us; 16430us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 3us; 32768us; 3us; 192us; 24us; 195us; 55us; 191us; 1us; 16434us; 7us; 198us; 3us; 32768us; 3us; 192us; 24us; 195us; 55us; 191us; 1us; 16435us; 7us; 198us; 4us; 16436us; 0us; 182us; 24us; 166us; 25us; 167us; 26us; 168us; 4us; 16437us; 0us; 182us; 24us; 166us; 25us; 167us; 26us; 168us; 1us; 16438us; 0us; 182us; 1us; 16439us; 0us; 182us; 1us; 16440us; 0us; 182us; 12us; 16441us; 0us; 182us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 12us; 16442us; 0us; 182us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 10us; 16443us; 0us; 182us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 10us; 16444us; 0us; 182us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 10us; 16445us; 0us; 182us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 10us; 16446us; 0us; 182us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 10us; 16447us; 0us; 182us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 10us; 16448us; 0us; 182us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 16us; 16449us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 16us; 16450us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 16us; 16451us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 16us; 16452us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 16us; 16453us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 17us; 32768us; 0us; 182us; 1us; 183us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 16us; 16454us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 14us; 16455us; 0us; 182us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 16us; 32768us; 0us; 182us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 15us; 16456us; 0us; 182us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 17us; 32768us; 0us; 182us; 8us; 199us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 17us; 16467us; 0us; 182us; 10us; 201us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 17us; 32768us; 0us; 182us; 1us; 216us; 14us; 185us; 15us; 184us; 16us; 169us; 17us; 170us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 22us; 164us; 23us; 165us; 24us; 166us; 25us; 167us; 26us; 168us; 34us; 171us; 35us; 172us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16457us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16458us; 3us; 32768us; 3us; 192us; 24us; 195us; 55us; 191us; 1us; 16459us; 7us; 198us; 0us; 16460us; 3us; 32768us; 3us; 192us; 24us; 195us; 55us; 191us; 2us; 32768us; 4us; 194us; 7us; 198us; 0us; 16461us; 8us; 32768us; 3us; 187us; 12us; 189us; 23us; 205us; 24us; 195us; 40us; 207us; 55us; 191us; 56us; 203us; 57us; 204us; 1us; 16462us; 7us; 198us; 0us; 16463us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16464us; 0us; 16466us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 1us; 32768us; 56us; 206us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 2us; 16475us; 50us; 215us; 51us; 212us; 0us; 16477us; 1us; 32768us; 1us; 213us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 56us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16478us; 13us; 32768us; 3us; 187us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 40us; 207us; 41us; 129us; 42us; 131us; 55us; 123us; 56us; 203us; 57us; 204us; 23us; 32768us; 3us; 187us; 5us; 37us; 12us; 189us; 13us; 127us; 23us; 205us; 24us; 195us; 27us; 134us; 28us; 136us; 38us; 56us; 40us; 207us; 41us; 129us; 42us; 131us; 43us; 50us; 45us; 68us; 46us; 85us; 47us; 94us; 48us; 101us; 49us; 103us; 52us; 110us; 53us; 77us; 55us; 123us; 56us; 203us; 57us; 204us; 0us; 16479us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 104us; 106us; 107us; 133us; 134us; 136us; 162us; 163us; 164us; 166us; 167us; 185us; 186us; 201us; 202us; 220us; 221us; 222us; 224us; 226us; 240us; 254us; 272us; 290us; 314us; 338us; 340us; 364us; 388us; 389us; 391us; 393us; 407us; 421us; 439us; 457us; 481us; 505us; 506us; 508us; 510us; 524us; 538us; 556us; 574us; 598us; 622us; 623us; 625us; 639us; 657us; 671us; 689us; 703us; 721us; 745us; 746us; 770us; 772us; 774us; 788us; 806us; 808us; 809us; 811us; 812us; 814us; 828us; 846us; 848us; 851us; 853us; 854us; 856us; 857us; 858us; 859us; 860us; 861us; 872us; 882us; 883us; 885us; 886us; 900us; 917us; 919us; 933us; 935us; 936us; 950us; 952us; 966us; 983us; 984us; 985us; 986us; 990us; 992us; 996us; 998us; 1003us; 1008us; 1010us; 1012us; 1014us; 1027us; 1040us; 1051us; 1062us; 1073us; 1084us; 1095us; 1106us; 1123us; 1140us; 1157us; 1174us; 1191us; 1209us; 1226us; 1241us; 1258us; 1274us; 1292us; 1310us; 1328us; 1342us; 1356us; 1370us; 1384us; 1398us; 1412us; 1426us; 1440us; 1454us; 1468us; 1482us; 1496us; 1510us; 1524us; 1538us; 1552us; 1566us; 1580us; 1594us; 1608us; 1622us; 1636us; 1637us; 1651us; 1652us; 1656us; 1658us; 1659us; 1663us; 1666us; 1667us; 1676us; 1678us; 1679us; 1693us; 1694us; 1695us; 1709us; 1710us; 1711us; 1712us; 1714us; 1715us; 1716us; 1717us; 1718us; 1721us; 1722us; 1724us; 1748us; 1749us; 1763us; 1787us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 5us; 9us; 7us; 2us; 7us; 2us; 7us; 5us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 0us; 1us; 2us; 3us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 22us; 23us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 16419us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 16425us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 16431us; 16432us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16457us; 65535us; 16458us; 65535us; 65535us; 16460us; 65535us; 65535us; 16461us; 65535us; 65535us; 16463us; 65535us; 16464us; 16466us; 65535us; 16468us; 16469us; 16470us; 65535us; 16471us; 16472us; 16473us; 16474us; 65535us; 16477us; 65535us; 65535us; 16478us; 65535us; 65535us; 16479us; |]
let _fsyacc_reductions ()  =    [| 
# 537 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "CPar.fsy"
                                                               Prog _1 
                   )
# 46 "CPar.fsy"
                 : Absyn.program));
# 557 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               [] 
                   )
# 51 "CPar.fsy"
                 : 'gentype_Topdecs));
# 567 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 52 "CPar.fsy"
                 : 'gentype_Topdecs));
# 579 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdec));
# 590 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               _1 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdec));
# 601 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 75 "CPar.fsy"
                 : 'gentype_Vardec));
# 613 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 86 "CPar.fsy"
                 : 'gentype_Vardesc));
# 624 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 94 "CPar.fsy"
                 : 'gentype_Vardesc));
# 635 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               _2                                      
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 657 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 100 "CPar.fsy"
                 : 'gentype_Vardesc));
# 669 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 105 "CPar.fsy"
                 : 'gentype_Fundec));
# 682 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Fundec));
# 696 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               [] 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 706 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               _1 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 717 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               [_1]     
                   )
# 117 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 728 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 740 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               Block _2 
                   )
# 123 "CPar.fsy"
                 : 'gentype_Block));
# 751 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               [] 
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 761 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 773 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 129 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 785 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               _1 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Stmt));
# 796 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               _1 
                   )
# 134 "CPar.fsy"
                 : 'gentype_Stmt));
# 807 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 818 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Return None          
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 828 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 839 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1                   
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 850 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 863 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 875 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               Until(_3, _5)        
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 887 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 901 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 913 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Break                
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 923 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_CaseList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                                        Switch(_3, _6)       
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 935 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Continue             
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 945 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtU));
# 958 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtU));
# 970 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtU));
# 982 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               Until(_3, _5)        
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 994 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               Access _1           
                   )
# 160 "CPar.fsy"
                 : 'gentype_Expr));
# 1005 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               _1                  
                   )
# 161 "CPar.fsy"
                 : 'gentype_Expr));
# 1016 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1                  
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1027 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1039 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1051 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1062 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1073 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1083 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim3("I++", _1)    
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1094 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Prim3("I--", _1)    
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1105 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim3("++I", _2)    
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1116 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim3("--I", _2)    
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1127 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1139 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1151 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1163 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1175 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1187 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1199 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1211 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2("<<", _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1223 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2(">>", _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1235 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1247 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1259 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1271 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1283 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               AssignPrim("+=", _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1295 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               AssignPrim("-=", _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1307 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               AssignPrim("*=", _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1319 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               AssignPrim("/=", _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1331 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               AssignPrim("%=", _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1343 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim4(_1,_3,_5)     
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1356 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1368 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1380 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               CstI _1             
                   )
# 203 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1391 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               _2                  
                   )
# 204 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1402 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Addr _2             
                   )
# 205 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1413 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               AccVar _1           
                   )
# 209 "CPar.fsy"
                 : 'gentype_Access));
# 1424 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               _2                  
                   )
# 210 "CPar.fsy"
                 : 'gentype_Access));
# 1435 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 211 "CPar.fsy"
                 : 'gentype_Access));
# 1446 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 212 "CPar.fsy"
                 : 'gentype_Access));
# 1457 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 213 "CPar.fsy"
                 : 'gentype_Access));
# 1469 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               []       
                   )
# 217 "CPar.fsy"
                 : 'gentype_Exprs));
# 1479 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               _1       
                   )
# 218 "CPar.fsy"
                 : 'gentype_Exprs));
# 1490 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               [_1]     
                   )
# 222 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1501 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 223 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1513 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               _1       
                   )
# 227 "CPar.fsy"
                 : 'gentype_Const));
# 1524 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               _1       
                   )
# 228 "CPar.fsy"
                 : 'gentype_Const));
# 1535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               - _2     
                   )
# 229 "CPar.fsy"
                 : 'gentype_Const));
# 1546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               -1       
                   )
# 230 "CPar.fsy"
                 : 'gentype_Const));
# 1556 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               TypI     
                   )
# 234 "CPar.fsy"
                 : 'gentype_Type));
# 1566 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               TypC     
                   )
# 235 "CPar.fsy"
                 : 'gentype_Type));
# 1576 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                               [] 
                   )
# 239 "CPar.fsy"
                 : 'gentype_CaseList));
# 1586 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CaseDec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                               [_1] 
                   )
# 240 "CPar.fsy"
                 : 'gentype_CaseList));
# 1597 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CaseDec in
            let _2 = parseState.GetInput(2) :?> 'gentype_CaseList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                               _1 :: _2 
                   )
# 241 "CPar.fsy"
                 : 'gentype_CaseList));
# 1609 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                               [Default(_3)] 
                   )
# 242 "CPar.fsy"
                 : 'gentype_CaseList));
# 1620 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CPar.fsy"
                                               Case(_2, _4)  
                   )
# 246 "CPar.fsy"
                 : 'gentype_CaseDec));
|]
# 1633 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 61;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
